{"version":3,"sources":["pages/HomePage.js","pages/AboutPage.js","components/ArticlesList.js","pages/article-content.js","pages/ArticlesListPage.js","components/CommentsList.js","components/UpvotesSection.js","components/AddCommentForm.js","pages/NotFoundPage.js","pages/ArticlePage.js","actions/searchActions.js","actions/types.js","components/TwitsList.js","components/SearchForm.js","components/Dropdown.js","pages/MainPage.js","pages/ExamplePage.js","components/TestDropdownTwits.js","pages/DropdownTestPage.js","NavBar.js","App.js","serviceWorker.js","reducers/searchReducer.js","reducers/index.js","store.js","index.js"],"names":["HomePage","AboutPage","ArticlesList","articles","map","article","key","className","to","name","title","content","substring","ArticlesListPage","articleContent","CommentsList","comments","comment","username","text","UpvotesSection","articleName","upvotes","setArticleInfo","upvoteArticle","a","fetch","method","result","json","body","id","onClick","AddCommentFrom","useState","setUsername","commentText","setCommentText","addComment","JSON","stringify","headers","type","value","onChange","event","target","rows","cols","NotFoundPage","ArticlePage","match","params","find","articleInfo","useEffect","console","log","fetchData","otherArticles","filter","paragraph","AddCommentForm","getTwits","dispatch","then","res","symbols","payload","deleteSymbol","symbol","TwitsList","props","state","toDelete","onSubmit","bind","this","e","preventDefault","document","getElementById","classList","toggle","symbolList","search","_id","twits","length","twit","stocktwits_timestamp","Component","connect","SearchForm","searchQuery","setState","addSymbols","MainPage","Example","data","setData","axios","get","TestDropdownTwits","showList","dropdownClass","toShow","toggleList","DropdownTestPage","NavBar","App","path","component","exact","ExamplePage","Boolean","window","location","hostname","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4b87ccb5.chunk.js","sourcesContent":["import React from 'react'\n\nconst HomePage = () => (\n    <>\n        <h1>Hello, welcome to my blog!</h1>\n        <p>\n            It is a long established fact that a reader will be distracted \n            by the readable content of a page when looking at its layout. \n            The point of using Lorem Ipsum is that it has a more-or-less normal \n            distribution of letters, as opposed to using 'Content here, content \n            here', making it look like readable English. Many desktop publishing \n            packages and web page editors now use Lorem Ipsum as their default \n            model text, and a search for 'lorem ipsum' will uncover many web sites \n            still in their infancy. Various versions have evolved over the years, \n            sometimes by accident, sometimes on purpose (injected humour and the like).\n        </p>\n        <p>\n            There are many variations of passages of Lorem Ipsum available, but the \n            majority have suffered alteration in some form, by injected humour, or \n            randomised words which don't look even slightly believable. If you are \n            going to use a passage of Lorem Ipsum, you need to be sure there isn't \n            anything embarrassing hidden in the middle of text. All the Lorem Ipsum \n            generators on the Internet tend to repeat predefined chunks as necessary, \n            making this the first true generator on the Internet. It uses a dictionary \n            of over 200 Latin words, combined with a handful of model sentence structures, \n            to generate Lorem Ipsum which looks reasonable. The generated Lorem Ipsum is \n            therefore always free from repetition, injected humour, or non-characteristic \n            words etc.\n        </p>\n        <p>\n        Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in \n        a piece of classical Latin literature from 45 BC, making it over 2000 years old. \n        Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked \n        up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and \n        going through the cites of the word in classical literature, discovered the undoubtable \n        source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of \"de Finibus Bonorum et \n        Malorum\" (The Extremes of Good and Evil) by Cicero, written in 45 BC. This book is a \n        treatise on the theory of ethics, very popular during the Renaissance. The first line \n        of Lorem Ipsum, \"Lorem ipsum dolor sit amet..\", comes from a line in section 1.10.32. \n        The standard chunk of Lorem Ipsum used since the 1500s is reproduced below for those \n        interested. Sections 1.10.32 and 1.10.33 from \"de Finibus Bonorum et Malorum\" by Cicero \n        are also reproduced in their exact original form, accompanied by English versions from \n        the 1914 translation by H. Rackham.\n        </p>\n    </>\n);\n\nexport default HomePage;","import React from 'react'\n\nconst AboutPage = () => (\n    <>\n        <h1>About me</h1>\n        <p>\n            It is a long established fact that a reader will be distracted \n            by the readable content of a page when looking at its layout. \n            The point of using Lorem Ipsum is that it has a more-or-less normal \n            distribution of letters, as opposed to using 'Content here, content \n            here', making it look like readable English. Many desktop publishing \n            packages and web page editors now use Lorem Ipsum as their default \n            model text, and a search for 'lorem ipsum' will uncover many web sites \n            still in their infancy. Various versions have evolved over the years, \n            sometimes by accident, sometimes on purpose (injected humour and the like).\n        </p>\n        <p>\n            There are many variations of passages of Lorem Ipsum available, but the \n            majority have suffered alteration in some form, by injected humour, or \n            randomised words which don't look even slightly believable. If you are \n            going to use a passage of Lorem Ipsum, you need to be sure there isn't \n            anything embarrassing hidden in the middle of text. All the Lorem Ipsum \n            generators on the Internet tend to repeat predefined chunks as necessary, \n            making this the first true generator on the Internet. It uses a dictionary \n            of over 200 Latin words, combined with a handful of model sentence structures, \n            to generate Lorem Ipsum which looks reasonable. The generated Lorem Ipsum is \n            therefore always free from repetition, injected humour, or non-characteristic \n            words etc.\n        </p>\n        <p>\n        Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in \n        a piece of classical Latin literature from 45 BC, making it over 2000 years old. \n        Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked \n        up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and \n        going through the cites of the word in classical literature, discovered the undoubtable \n        source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of \"de Finibus Bonorum et \n        Malorum\" (The Extremes of Good and Evil) by Cicero, written in 45 BC. This book is a \n        treatise on the theory of ethics, very popular during the Renaissance. The first line \n        of Lorem Ipsum, \"Lorem ipsum dolor sit amet..\", comes from a line in section 1.10.32. \n        The standard chunk of Lorem Ipsum used since the 1500s is reproduced below for those \n        interested. Sections 1.10.32 and 1.10.33 from \"de Finibus Bonorum et Malorum\" by Cicero \n        are also reproduced in their exact original form, accompanied by English versions from \n        the 1914 translation by H. Rackham.\n        </p>\n    </>\n);\n\nexport default AboutPage;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ArticlesList = ({ articles }) => (\n    <>\n    {articles.map((article, key) => (\n        <Link className=\"article-list-item\" key={key} to={`/article/${article.name}`}>\n            <h3>{article.title}</h3>\n            <p>{article.content[0].substring(0, 150)}...</p>\n        </Link>\n    ))}\n    </>\n);\n\nexport default ArticlesList;","const articles = [\n    {\n        name: 'learn-react',\n        title: 'The Fastest Way to Learn React',\n        content: [\n            `Welcome! Today we're going to be talking about the fastest way to\n            learn React. We'll be discussing some topics such as proin congue\n            ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \n            Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \n            non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \n            eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \n            sodales purus euismod.`,\n            `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n            `Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n        ]\n    },    {\n        name: 'learn-node',\n        title: 'How to Build a Node Server in 10 Minutes',\n        content: [\n            `In this article, we're going to be talking looking at a very quick way\n            to set up a Node.js server. We'll be discussing some topics such as proin congue\n            ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \n            Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \n            non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \n            eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \n            sodales purus euismod.`,\n            `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n            `Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n        ]\n    },     {\n        name: 'my-thoughts-on-resumes',\n        title: 'My Thoughts on Resumes',\n        content: [\n            `Today is the day I talk about something which scares most people: resumes.\n            In reality, I'm not sure why people have such a hard time with proin congue\n            ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \n            Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \n            non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \n            eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \n            sodales purus euismod.`,\n            `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n            `Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n        ]\n    },  \n];\n\nexport default articles;","import React from 'react'\nimport ArticlesList from '../components/ArticlesList';\nimport articleContent from './article-content';\n\nconst ArticlesListPage = () => (\n    <>\n        <h1>Articles</h1>\n        <ArticlesList articles={articleContent} />\n    </>\n);\n\nexport default ArticlesListPage;","import React from 'react';\n\nconst CommentsList = ({ comments }) => (\n    <>\n    <h3>Comments:</h3>\n    {comments.map((comment, key) => (\n        <div className=\"comment\" key={key}>\n            <h4>{comment.username}</h4>\n            <p>{comment.text}</p>\n        </div>\n    ))}\n    </>\n);\n\nexport default CommentsList;","import React from 'react';\n\nconst UpvotesSection = ({ articleName, upvotes, setArticleInfo }) => {\n    const upvoteArticle = async () => {\n        const result = await fetch(`/api/articles/${articleName}/upvote`, {\n            method: 'post'\n        });\n        const body = await result.json();\n        setArticleInfo(body);\n    }\n    return (\n        <div id=\"upvotes-section\">\n            <button onClick={() => upvoteArticle()}>Add Upvote</button>\n            <p>This post has been upvoted {upvotes} times.</p>\n        </div>\n    );\n}\n\nexport default UpvotesSection;","import React, { useState } from 'react';\n\nconst AddCommentFrom = ({ articleName, setArticleInfo }) => {\n    const [username, setUsername] = useState('');\n    const [commentText, setCommentText] = useState('');\n\n    const addComment = async () => {\n        const result = await fetch(`/api/articles/${articleName}/add-comment`, {\n            method: 'post',\n            body: JSON.stringify({ username, text: commentText }),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n        const body = await result.json();\n        setArticleInfo(body);\n        setUsername('');\n        setCommentText('');\n    }\n\n    return (\n        <div id=\"add-comment-form\">\n            <h3>Add a Comment</h3>\n            <label>\n                Name:\n                <input type=\"text\" value={username} onChange={(event) => setUsername(event.target.value)} />\n            </label>\n            <label>\n                Comment:\n                <textarea rows=\"4\" cols=\"50\" value={commentText} onChange={(event) => setCommentText(event.target.value)} />\n            </label>\n            <button onClick={() => addComment()}>Add Comment</button>\n        </div>\n    );\n}\n\nexport default AddCommentFrom;","import React from 'react';\n\nconst NotFoundPage = () => (\n    <h1>404: Page Not Found</h1>\n)\n\nexport default NotFoundPage;","import React, { useState, useEffect } from 'react';\nimport ArticlesList from '../components/ArticlesList';\nimport CommentsList from '../components/CommentsList';\nimport UpvotesSection from '../components/UpvotesSection';\nimport AddCommentForm from '../components/AddCommentForm';\nimport NotFoundPage from './NotFoundPage';\nimport articleContent from './article-content';\n\nconst ArticlePage = ({ match }) => {\n    const name = match.params.name;\n    const article = articleContent.find(article => article.name === name);\n\n    const [articleInfo, setArticleInfo] = useState({ upvotes: 0, comments: [] });\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await fetch(`/api/articles/${name}`);\n            const body = await result.json();\n            console.log(body);\n            setArticleInfo(body);\n        }\n        fetchData();\n        // setArticleInfo({ upvotes: Math.ceil(Math.random() * 10) });\n    }, [name]);\n\n    if (!article) return <NotFoundPage />\n\n    const otherArticles = articleContent.filter(article => article.name !== name);\n\n    return (\n        <>\n            <h1>{article.title}</h1>\n            <UpvotesSection articleName={name} upvotes={articleInfo.upvotes} setArticleInfo={setArticleInfo} />\n            {article.content.map((paragraph, key) => (\n                <p key={key}>{paragraph}</p>\n            ))}\n            <CommentsList comments={articleInfo.comments} />\n            <AddCommentForm articleName={name} setArticleInfo={setArticleInfo} />\n            <h3>Other Articles:</h3>\n            <ArticlesList articles={otherArticles} />\n        </>\n    );\n}\n\nexport default ArticlePage;","import { SEARCH_SYMBOLS, ADD_SYMBOLS , DELETE_SYMBOL } from './types';\n\nexport const getTwits = () => dispatch => {\n    fetch('/api/stocktwits/get-saved-twits')\n    .then(res => res.json())\n    .then(symbols => dispatch({\n        type: SEARCH_SYMBOLS,\n        payload: symbols\n    }));\n};\n\nexport const addSymbols = symbols => dispatch => {\n    console.log(\"addsymbols action\");\n    fetch(`/api/stocktwits/${symbols}/new-twits`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json'\n            }\n        })\n        .then(res => res.json())\n        .then(symbols => dispatch({\n            type: ADD_SYMBOLS,\n            payload: symbols\n        }))\n};\n\n\nexport const deleteSymbol = symbol => dispatch => {\n    console.log(\"Delete symbol action\");\n    fetch(`/api/stocktwits/${symbol}/delete`, {\n        method: 'POST'\n    })\n    .then(res => res.json())\n    .then(symbols => dispatch({\n        type: DELETE_SYMBOL,\n        payload: symbols\n    }));\n};\n\n","export const SEARCH_SYMBOLS = 'SEARCH_SYMBOLS';\nexport const ADD_SYMBOLS = 'ADD_SYMBOLS';\nexport const DELETE_SYMBOL = 'DELETE_SYMBOL';","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getTwits } from '../actions/searchActions';\nimport { deleteSymbol } from '../actions/searchActions';\n\nclass TwitsList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            toDelete: ''\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n    componentWillMount() {\n        this.props.getTwits();\n        \n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        this.props.deleteSymbol(e.target.value);\n    }\n\n    expandTwits() {\n        document.getElementById(\"twits\").classList.toggle(\"show\");\n    }\n    render() {\n        const symbolList = this.props.search.map(symbol => (\n            <div key={symbol._id}>\n                <h3>{symbol.twits.length} {symbol.symbol} Twits</h3>\n                <button>twits</button>\n                <button onClick={this.onSubmit} value={symbol.symbol}>delete</button>\n                {symbol.twits.map(twit => (\n                    <div id=\"twits\" className=\"dropdown-content\" key={twit.id}>\n                        <h4>{twit.username}</h4>\n                        <h4>{twit.stocktwits_timestamp}</h4>\n                        <h4>{twit.body}</h4>\n                    </div>\n                    ))\n                }\n            </div>\n        ))\n        return (\n            <>\n            <h1>Twits</h1>\n            {symbolList}\n            </>\n        );\n    }\n};\n\n// Search.propTypes = {\n//     getTwits: PropTypes.func.isRequired,\n//     search: PropTypes.array.isRequired\n// }\n\nconst mapStateToProps = state => ({\n    search: state.search.symbols\n})\n\nexport default connect(mapStateToProps, { getTwits, deleteSymbol })(TwitsList);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addSymbols } from '../actions/searchActions';\n\n\n\nclass SearchForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchQuery: ''\n        }\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onChange(e) {\n        this.setState({ searchQuery: e.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const symbols = this.state.searchQuery;\n\n        this.props.addSymbols(symbols);\n        \n    }\n\n    render() {\n        return (\n        <>\n        <h1>Search Symbols</h1>\n        <form onSubmit={this.onSubmit}>\n            <input type=\"text\" name=\"searchQuery\" onChange={this.onChange} value={this.state.searchQuery} />\n            <button type=\"submit\">Search</button>\n        </form>\n        </>\n    )\n    \n    }\n};\n\nexport default connect(null, { addSymbols })(SearchForm);","import React, { Component } from 'react';\n\nclass Dropdown extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            listOpen: false,\n            headerTitle: \"Dropdown Test\"\n        }\n    }\n\n    handleClickOutside() {\n        this.setState({\n            listOpen: false\n        });\n    }\n\n    toggleList() {\n        this.setState(prevState => ({\n            listOpen: !prevState.listOpen\n        }));\n    }\n\n    render() {\n        const{list} = this.props;\n        const{listOpen, headerTitle} = this.state;\n\n        return(\n            <div className=\"dd-wrapper\">\n                <div className=\"dd-header\" onClick={() => this.toggleList()}>\n                    <div className=\"dd-header-title\">{headerTitle}</div>\n                </div>\n                {listOpen && <ul className=\"dd-list\">\n                    {list.map((item) => (\n                        <li className=\"dd-list-item\" key={item.id} >list item</li>\n                    ))}\n                </ul>}\n            </div>\n        )\n    }\n}\n\nexport default Dropdown;","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom';\nimport TwitsList from '../components/TwitsList';\nimport SearchForm from '../components/SearchForm';\nimport Dropdown from '../components/Dropdown';\nimport SearchSymbols from '../components/SearchSymbols';\n// const latestTwits = fetch(`/api/stocktwits/AAPL/get-twits`);\n\nconst MainPage = () => {\n\n    return (\n        <>\n            <SearchForm />\n            <TwitsList />\n        </>\n    )\n\n}\n\nexport default MainPage;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Example = () => {\n    const [data, setData] = useState({ symbols: [] });\n    const [query, setQuery] = useState('');\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await axios.get('/api/stocktwits/get-saved-twits');\n            // console.log(result.data);\n            setData({ symbols: result.data });\n        }\n        fetchData();\n    }, []);\n    return (\n        <ul>\n            {data.symbols.map((symbol, key) => (\n                <li key={symbol._id}>\n                    <h1>{symbol.symbol}</h1>\n                        <ul>\n                            {symbol.twits.map((twit) => (\n                                <li key={twit.id}>\n                                    <p>{twit.username} on {twit.stocktwits_timestamp}</p>\n                                    <p>{twit.body}</p>\n                                </li>\n                            ))}\n                        </ul>\n                </li>\n            ))}\n        </ul>\n    )\n}\n\n\n// const Example = () => {\n//     const [data, setData] = useState({ hits: [] });\n//     const [query, setQuery] = useState('redux');\n//     const [url, setUrl] = useState(`https://hn.algolia.com/api/v1/search?query=redux`);\n\n//     useEffect(() => {\n//         async function fetchData() {\n//             const result = await axios(url);\n//             setData(result.data);\n//         }\n//         fetchData();\n//     }, [url]);\n//     return (\n//         <>\n//             <input type=\"text\" value={query} onChange={event => setQuery(event.target.value)} />\n//             <button type=\"button\" onClick={() => setUrl(`https://hn.algolia.com/api/v1/search?query=${query}`)}>Search</button>\n//             <ul>\n//                 {data.hits.map(item => (\n//                     <li key={item.objectID}>\n//                         <a href={item.url}>{item.title}</a>\n//                     </li>\n//                 ))}\n//             </ul>\n//         </>\n//     )\n// }\n\n// const Example = () => {\n//     const [music, setMusic] = useState({albums: []});\n//     useEffect(() => {\n//         async function fetchData() {\n//             const results = await fetch('https://rallycoding.herokuapp.com/api/music_albums');\n//             const json = await results.json();\n//             setMusic({albums: json });\n//         }\n//         fetchData();\n//     }, []);\n//     return (\n        \n//             <ul>\n//              {music.albums.map((album, k) =>\n//                 <li key={k}>\n//                     <p>{album.title}</p>\n//                 </li>\n//               )}\n//         </ul>\n        \n//     )\n// }\n\n\n// const API = 'https://hn.algolia.com/api/v1/search?query=';\n// const DEFAULT_QUERY = 'redux';\n\n// class Example extends Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//       hits: [],\n//       isLoading: false,\n//       error: null\n//     };\n//   }\n\n//   componentDidMount() {\n//       this.setState({ isLoading: true });\n\n//       axios.get(API + DEFAULT_QUERY)\n//         .then(result => this.setState({\n//             hits: result.data.hits,\n//             isLoading: false\n//         }))\n//         .catch(error => this.setState({error, isLoading: false }));\n//   }\n  \n//   render() {\n//     const { hits, isLoading, error } = this.state;\n\n//     if (error) {\n//         return <p>{error.message}</p>;\n//     }\n\n//     if (isLoading) {\n//         return <p>Loading...</p>;\n//     }\n\n//     return (\n//         <ul>\n//             {hits.map(hit =>\n//                 <li key={hit.objectID}>\n//                     <a href={hit.url}>{hit.title}</a>\n//                 </li>\n//             )}\n//         </ul>\n//       )\n//   }\n  \n// }\n\n\n\nexport default Example;","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getTwits } from '../actions/searchActions';\nimport { deleteSymbol } from '../actions/searchActions';\n\n// @TODO\n// Convert function component\n// implement prop types\nclass TestDropdownTwits extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showList: false,\n            dropdownClass: 'dropdown-content',\n            toShow: '',\n            toDelete: '',\n\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n        this.toggleList = this.toggleList.bind(this);\n    }\n    componentWillMount() {\n        this.props.getTwits();\n        \n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        this.props.deleteSymbol(e.target.value);\n    }\n\n    toggleList(e) {\n        if (this.state.showList && this.state.toShow !== e.target.id) {\n            this.setState({showList: true, toShow: e.target.id});\n        } else {\n            this.setState({showList: !this.state.showList, toShow: e.target.id})\n        }\n    }\n\n    render() {\n        const {showList, toShow} = this.state;\n        const symbolList = this.props.search.map(symbol => (\n            <div key={symbol._id} className=\"dropdown\">\n                <button id={symbol.symbol} onClick={this.toggleList} className=\"dropbtn\">{symbol.twits.length} {symbol.symbol} Twits</button>\n                <button onClick={this.onSubmit} value={symbol.symbol}>delete</button> \n                <div className={`${showList && toShow == symbol.symbol ? \"\" : \"dropdown-content\"}`}>\n                    {symbol.twits.map(twit => (\n                        <li key={twit.id}>\n                            <h3>Posted by {twit.username} on {twit.stocktwits_timestamp}</h3>\n                            <p>{twit.body}</p>\n                        </li>\n                    ))}\n                </div>\n            </div>\n        ));\n        return (\n            <>\n            <h1>Dropdown Test Twits</h1>\n            {symbolList}\n            </>\n        );\n    }\n};\n\n// Search.propTypes = {\n//     getTwits: PropTypes.func.isRequired,\n//     search: PropTypes.array.isRequired\n// }\n\nconst mapStateToProps = state => ({\n    search: state.search.symbols\n})\n\nexport default connect(mapStateToProps, { getTwits, deleteSymbol })(TestDropdownTwits);","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom';\nimport TwitsList from '../components/TwitsList';\nimport SearchForm from '../components/SearchForm';\nimport Dropdown from '../components/Dropdown';\nimport SearchSymbols from '../components/SearchSymbols';\nimport TestDropdownTwits from '../components/TestDropdownTwits';\n// const latestTwits = fetch(`/api/stocktwits/AAPL/get-twits`);\n\nconst DropdownTestPage = () => {\n\n    return (\n        <>\n            <SearchForm />\n            <TestDropdownTwits />\n        </>\n    )\n\n}\n\nexport default DropdownTestPage;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NavBar = () => (\n    <nav>\n        <ul>\n            <li><Link to=\"/\">Home</Link></li>\n            <li><Link to=\"/about\">About</Link></li>\n            <li><Link to=\"/articles-list\">Articles</Link></li>\n        </ul>\n    </nav>\n);\n\nexport default NavBar;","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport AboutPage from './pages/AboutPage';\nimport ArticlesListPage from './pages/ArticlesListPage';\nimport ArticlePage from './pages/ArticlePage';\nimport MainPage from './pages/MainPage';\nimport ExamplePage from './pages/ExamplePage';\nimport DropdownTestPage from './pages/DropdownTestPage';\nimport NotFoundPage from './pages/NotFoundPage';\nimport NavBar from './NavBar';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <NavBar />\n        <div id=\"page-body\">\n          <Switch>\n            <Route path=\"/\" component={HomePage} exact />\n            <Route path=\"/about\" component={AboutPage} />\n            <Route path=\"/articles-list\" component={ArticlesListPage} />\n            <Route path=\"/article/:name\" component={ArticlePage} />\n            <Route path=\"/stocktwits\" component={MainPage} />\n            <Route path=\"/dropdowntest\" component={DropdownTestPage} />\n            <Route path=\"/example\" component={ExamplePage} />\n            <Route component={NotFoundPage} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { SEARCH_SYMBOLS, ADD_SYMBOLS, DELETE_SYMBOL } from '../actions/types';\n\nconst initialState = {\n    symbols: [],\n    symbol: {}\n}\n\nexport default (state = initialState, action) => {\n    switch(action.type) {\n        case SEARCH_SYMBOLS:\n            return {\n                ...state,\n                symbols: action.payload\n            }\n        case ADD_SYMBOLS:\n            return {\n                ...state,\n                symbols: action.payload\n            }\n        case DELETE_SYMBOL:\n            return {\n                ...state,\n                symbols: action.payload\n            }\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport searchReducer from './searchReducer';\n\nexport default combineReducers({\n    search: searchReducer\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer, \n    initialState, \n    compose(\n        applyMiddleware(...middleware),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n);\n\nexport default store;","import 'whatwg-fetch';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}